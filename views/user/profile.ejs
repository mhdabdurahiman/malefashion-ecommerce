<%- include('../partials/userPartials/header') -%>
    <style>
        .address-list {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .address-item {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            border: 1px solid #ddd;
            padding: 10px;
            width: 100%;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
        }

        .address-details {
            flex-grow: 1;
        }

        .address-actions {
            margin-left: 10px;
            display: flex;
            flex-direction: column;
            align-items: flex-end;
        }
    </style>
    <section id="user-profile" class="user-profile spad">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 p-4 ">
                    <!-- Section Buttons -->
                    <ul class="nav flex-column nav-pills">
                        <li class="nav-item">
                            <a class="nav-link active" id="userDetailsTab" data-toggle="pill" href="#userDetails">User
                                Details</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="changePasswordTab" data-toggle="pill"
                                href="#changePasswordForm">Change
                                Password</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="ordersTab" data-toggle="pill" href="#orders">Orders</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="ordersTab" data-toggle="pill" href="#addressList">Address</a>
                        </li>
                    </ul>
                </div>

                <div class="col-md-9 p-4">
                    <!-- Tab Content -->
                    <div class="tab-content">
                        <!-- User Details Tab -->
                        <div class="tab-pane fade show active" id="userDetails">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="mb-0">User Details</h5>
                                </div>
                                <div class="card-body">
                                    <p><strong>Name:</strong>
                                        <%= userDetails.fullname %>
                                    </p>
                                    <p><strong>Email:</strong>
                                        <%= userDetails.email %>
                                    </p>
                                    <p><strong>Phone:</strong>
                                        <%= userDetails.mobile %>
                                    </p>

                                    <button id="editUserDetails" class="btn site-btn" data-target="#editUserModal"
                                        data-user-id="<%= userDetails._id %>"
                                        data-fullname="<%= userDetails.fullname %>"
                                        data-email="<%= userDetails.email %>"
                                        data-mobile="<%= userDetails.mobile %>">Edit Details</button>
                                </div>
                            </div>
                        </div>
                        <!----------------------------------------------------- Change Password Tab ----------------------------------------------------->
                        <div class="tab-pane fade" id="changePasswordForm">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="mb-0">Change password</h5>
                                </div>
                                <div class="card-body" style="width: 50%;">
                                    <form id="changePassForm">
                                        <div class="form-group">
                                            <label for="currentPassword">Current Password</label>
                                            <input type="password" class="form-control" name="currentPassword"
                                                id="currentPassword" placeholder="Enter your current password" required>
                                            <div class="invalid-feedback">Please enter your current password.</div>
                                        </div>
                                        <div class="form-group">
                                            <label for="newPassword">New Password</label>
                                            <input type="password" class="form-control" name="newPassword"
                                                id="newPassword" placeholder="Enter new password" required>
                                            <div class="invalid-feedback">Please new password</div>
                                        </div>
                                        <div class="form-group">
                                            <label for="confirmPassword">Confirm new password</label>
                                            <input type="password" class="form-control" name="confirmPassword"
                                                id="confirmPassword" placeholder="Confirm your new password" required>
                                            <div class="invalid-feedback">Please confirm new password.</div>
                                        </div>


                                        <button type="submit" id="changePassword" class="btn site-btn"
                                            data-user-id="<%= userDetails._id %>">Change Password</button>
                                    </form>
                                </div>
                            </div>
                        </div>

                        <!---------------------------------------------------- Orders Tab --------------------------------------------------------------->
                        <div class="tab-pane fade" id="orders">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="mb-0">Order History</h5>
                                </div>
                                <div class="table-responsive">
                                    <table class="table">
                                        <thead>
                                            <th>Date</th>
                                            <th>Order Id</th>
                                            <th>Amount</th>
                                            <th>Status</th>
                                            <th>Payment method</th>
                                        </thead>
                                        <% for( order of orderData ) { %>
                                            <div class="table-data">
                                                <tbody>
                                                    <tr>
                                                        <td>
                                                            <%= order.createdAt.toDateString() %>
                                                        </td>
                                                        <td>
                                                            <%= order.orderId %>
                                                        </td>
                                                        <td>
                                                            <%= order.totalPrice %>
                                                        </td>
                                                        <td id="order-status-">
                                                            <%= order.orderStatus %>
                                                        </td>
                                                        <td>
                                                            <%= order.paymentOption %>
                                                        </td>

                                                        <td><a type="button" id="orderDetails" style="font-size: 10px;"
                                                                class="btn btn-sm py-2 px-2 site-btn rounded-0"
                                                                href="/user/order-details/<%= order._id %>">Order
                                                                Details</a>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                                <% } %>
                                    </table>
                                </div>

                            </div>
                        </div>
                        <!--------------------------------------------------------- Address Tab ------------------------------------------------------------------>
                        <div class="tab-pane fade" id="addressList">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="mb-0">Delivery Address</h5>
                                </div>
                                <div class="p-2 ">
                                    <button class="btn site-btn float-right" data-toggle="modal"
                                        data-target="#addAddressModal">Add address</button>
                                </div>
                                <div class="card-body">
                                    <div class="address-list">
                                        <% if(userDetails.address.length> 0) { %>
                                            <% userDetails.address.forEach(address=> { %>
                                                <div class="address-item">
                                                    <div class="address-details">
                                                        <p><strong>Full Name:</strong>
                                                            <%= address.fullname %>
                                                        </p>
                                                        <p><strong>Mobile:</strong>
                                                            <%= address.mobile %>
                                                        </p>
                                                        <p><strong>Landmark:</strong>
                                                            <%= address.landmark %>
                                                        </p>
                                                        <p><strong>City:</strong>
                                                            <%= address.city %>
                                                        </p>
                                                        <p><strong>Pincode:</strong>
                                                            <%= address.pincode %>
                                                        </p>
                                                        <p><strong>District:</strong>
                                                            <%= address.district %>
                                                        </p>
                                                        <p><strong>State:</strong>
                                                            <%= address.state %>
                                                        </p>
                                                    </div>

                                                    <div class="address-actions">
                                                        <button id="addressEdit" class="btn btn-outline-primary"
                                                            data-target="#editAddressModal"
                                                            data-address-id="<%= address._id %>"
                                                            data-fullname="<%= address.fullname %>"
                                                            data-mobile="<%= address.mobile %>"
                                                            data-landmark="<%= address.landmark %>"
                                                            data-city="<%= address.city %>"
                                                            data-pincode="<%= address.pincode %>"
                                                            data-district="<%= address.district %>"
                                                            data-state="<%= address.state %>">Edit</button>
                                                        <button id="addressDelete" class="btn btn-outline-danger"
                                                            onclick="deleteAddress('<%= address._id %>')">Delete</button>
                                                    </div>
                                                </div>
                                                <% }) %>
                                                    <% } else { %>
                                                        <h3>Address is empty</h3>
                                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>



            </div>
        </div>
    </section>


    <!------------------------------------------------------------- Edit User Details Modal -------------------------------------------------------->

    <div class="modal fade" id="editUserDetailsModal" tabindex="-1" role="dialog" aria-labelledby="editUserModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editUserModalLabel">Edit User Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editUserDetailsForm" class="needs-validation" novalidate>
                        <div class="form-group">
                            <label for="editUserName">Name</label>
                            <input name="fullname" type="text" class="form-control" id="editUserName"
                                placeholder="Enter your name" required>
                            <div class="invalid-feedback">Please enter your name.</div>
                        </div>
                        <div class="form-group">
                            <label for="editUserMoblie">Mobile</label>
                            <input name="mobile" type="number" class="form-control" id="editUserMobile"
                                placeholder="Enter your number">
                            <div class="invalid-feedback">Please enter your number.</div>
                        </div>
                        <button type="submit" class="btn site-btn">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-------------------------------------------------  Address Modal ------------------------------------------------->

    <%- include('../partials/userPartials/addAddressModal') -%>

        <!---------------------------------------------- Edit Address Modal -------------------------------------------->
        <div class="modal fade" id="editAddressModal" tabindex="-1" role="dialog"
            aria-labelledby="editAddressModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editAddressModalLabel">Add new address</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <!-- Form elements for editing new address -->
                        <form id="editAddressForm" class="needs-validation" novalidate>
                            <input type="hidden" id="editAddressId" name="addressId">
                            <div class="form-group">
                                <label for="editFullname">Full name</label>
                                <input type="text" class="form-control" name="fullname" id="editFullname"
                                    placeholder="Enter your name" required>
                                <div class="invalid-feedback">Please enter your full name.</div>
                            </div>
                            <div class="form-group">
                                <label for="editMobile">Mobile</label>
                                <input type="number" class="form-control" name="mobile" id="editMobile"
                                    placeholder="Enter your mobile" required>
                                <div class="invalid-feedback">Please enter your mobile number.</div>
                            </div>
                            <div class="form-group">
                                <label for="editLandmark">Landmark</label>
                                <input type="text" class="form-control" name="landmark" id="editLandmark"
                                    placeholder="Enter your landmark" required>
                                <div class="invalid-feedback">Please enter your landmark.</div>
                            </div>
                            <div class="form-group">
                                <label for="editCity">City</label>
                                <input type="text" class="form-control" name="city" id="editCity"
                                    placeholder="Enter your city" required>
                                <div class="invalid-feedback">Please enter your city.</div>
                            </div>
                            <div class="form-group">
                                <label for="editPincode">Pincode</label>
                                <input type="number" class="form-control" name="pincode" id="editPincode"
                                    placeholder="Enter your pincode" required>
                                <div class="invalid-feedback">Please enter your pincode.</div>
                            </div>
                            <div class="form-group">
                                <label for="editDistrict">District</label>
                                <input type="text" class="form-control" name="district" id="editDistrict"
                                    placeholder="Enter your district" required>
                                <div class="invalid-feedback">Please enter your district.</div>
                            </div>
                            <div class="form-group">
                                <label for="editState">State</label>
                                <input type="text" class="form-control" name="state" id="editState"
                                    placeholder="Enter your state" required>
                                <div class="invalid-feedback">Please enter your state.</div>
                            </div>
                            <button type="submit" class="btn site-btn">Edit address</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
        <script>

            async function deleteAddress(addressId) {
                addressId = addressId.trim();
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#000000",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        const response = await fetch('/user/delete-address', {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ addressId: addressId })
                        })

                        try {
                            const json = await response.json();
                            if (json.success == true) {
                                Swal.fire({
                                    title: "Deleted!",
                                    text: "Address has been deleted.",
                                    icon: "success",
                                });
                                $("#addressList").load(location.href + " #addressList");
                                window.location.href = window.location.href.split('#')[0] + '#addressList';
                                location.reload();



                            }

                        } catch (error) {
                            console.log(error.message)
                        }
                    }
                });
            }

            // Edit address modal value populating

            $(document).ready(function () {
                $('#addressEdit').on('click', function () {
                    let addressId = $(this).data('address-id');
                    let fullname = $(this).data('fullname');
                    let mobile = $(this).data('mobile');
                    let landmark = $(this).data('landmark');
                    let city = $(this).data('city');
                    let pincode = $(this).data('pincode');
                    let district = $(this).data('district');
                    let state = $(this).data('state');

                    console.log(addressId);

                    $('#editAddressId').val(addressId);
                    $('#editFullname').val(fullname);
                    $('#editMobile').val(mobile);
                    $('#editLandmark').val(landmark);
                    $('#editCity').val(city);
                    $('#editPincode').val(pincode);
                    $('#editDistrict').val(district);
                    $('#editState').val(state);

                    // Show the modal
                    $('#editAddressModal').modal('show');
                });

                const editAddressForm = document.getElementById('editAddressForm');

                editAddressForm.addEventListener('submit', async function (event) {
                    event.preventDefault();
                    if (editAddressForm.checkValidity() === false) {
                        event.stopPropagation();
                    } else {
                        const formData = new FormData(editAddressForm);
                        const fullname = formData.get('fullname');
                        const mobile = formData.get('mobile');
                        const landmark = formData.get('landmark');
                        const city = formData.get('city');
                        const pincode = formData.get('pincode');
                        const district = formData.get('district');
                        const state = formData.get('state');

                        if (!fullname || !mobile || !landmark || !city || !pincode || !district || !state || !isValidMobileNumber(mobile)) {
                            alert('Please fill in all required fields and provide a valid mobile number.');
                            return;
                        }

                        const response = await fetch('/user/edit-address', {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(Object.fromEntries(formData)),

                        })



                        try {
                            const json = await response.json();
                            $('#editAddressModal').modal('hide');

                            if (json.success === true) {
                                $("#addressList").load(location.href + " #addressList");

                                Swal.fire({
                                    title: "Address Edited",
                                    text: "Address has been edited successfully",
                                    icon: "success",
                                });
                                window.location.href = window.location.href.split('#')[0] + '#addressList';
                                location.reload();


                            } else {
                                console.error('Error during fetch:', json.error);
                            }
                        } catch (error) {
                            console.error('Error parsing JSON:', error);
                        }
                    }
                    editAddressForm.classList.add('was-validated');
                });

            });
            function isValidMobileNumber(mobile) {
                return /^[0-9]{10}$/.test(mobile);
            }

            // Edit user details modal value populating

            $(document).ready(function () {
                $('#editUserDetails').on('click', function () {
                    let userId = $(this).data('user-id');
                    let fullname = $(this).data('fullname');
                    let mobile = $(this).data('mobile')

                    $('#editUserName').val(fullname);
                    $('#editUserMobile').val(mobile)

                    $('#editUserDetailsModal').modal('show');
                });

                const editUserDetailsForm = document.getElementById('editUserDetailsForm');

                editUserDetailsForm.addEventListener('submit', async function (event) {
                    event.preventDefault();

                    if (editUserDetailsForm.checkValidity() === false) {
                        event.stopPropagation();
                    } else {
                        const formData = new FormData(editUserDetailsForm);
                        const fullname = formData.get('fullname');
                        const mobile = formData.get('mobile');

                        if (!fullname || !mobile || !isValidMobileNumber(mobile)) {
                            alert('Please fill in all required fields and provide a valid mobile number.');
                            return;
                        }

                        const response = await fetch('/user/edit-details', {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(Object.fromEntries(formData)),
                        })

                        try {
                            const json = await response.json();
                            $('#editUserDetailsModal').modal('hide');

                            if (json.success === true) {
                                Swal.fire({
                                    title: "User Details Edited",
                                    text: "User details has been edited successfully",
                                    icon: "success",
                                });
                            }
                            location.reload();

                        } catch (error) {
                            console.log('Error parsing JSON:', error)
                        }
                    }
                    editUserDetailsForm.classList.add('was-validated');
                })

            })

            // async function cancelOrder() {
            //     try {
            //         const statusSelect = document.querySelector('#statusSelect')
            //         const orderId = ;
            //         const newStatus = statusSelect.value;
            //         console.log('status:', newStatus)

            //         const requestData = { orderId: orderId, status: newStatus };
            //         Swal.fire({
            //             title: "Are you sure?",
            //             text: "You won't be able to revert this!",
            //             icon: "warning",
            //             showCancelButton: true,
            //             confirmButtonColor: "#3085d6",
            //             cancelButtonColor: "#d33",
            //             confirmButtonText: "Yes!"
            //         }).then(async (result) => {
            //             if (result.isConfirmed) {
            //                 Swal.fire({
            //                     title: "Success!",
            //                     icon: "success"
            //                 });
            //                 const response = await fetch('/admin/change-order-status', {
            //                     method: 'PATCH',
            //                     headers: {
            //                         'Content-Type': 'application/json'
            //                     },
            //                     body: JSON.stringify(requestData)
            //                 })
            //                 if (response.ok) {
            //                     $("#order-details-div").load(
            //                         "/admin/order-details #order-details-div")
            //                 }
            //                 else {
            //                     console.error('Failed to fetch updated order status');
            //                 }
            //             }
            //         });



            //     } catch (error) {
            //         console.log('An error occurred:', error)
            //     }
            // }

            document.getElementById('changePasswordForm').addEventListener('submit', async (e) => {
                e.preventDefault();

                const currentPassword = document.getElementById('currentPassword').value;
                const newPassword = document.getElementById('newPassword').value;
                const confirmPassword = document.getElementById('confirmPassword').value;

                const Toast = Swal.mixin({
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.onmouseenter = Swal.stopTimer;
                        toast.onmouseleave = Swal.resumeTimer;
                    }
                });


                if (newPassword !== confirmPassword) {
                    Swal.fire({
                        title: "Passwords doesn't match",
                        text: "New password and confirm password doesn't match",
                        confirmButtonColor: "#111111",
                    });
                }

                try {
                    const response = await fetch('/reset-password', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            oldPassword: currentPassword,
                            newPassword: newPassword,
                            confirmNewPassword: confirmPassword
                        })
                    });
                    const data = await response.json();

                    if (response.ok) {
                        document.getElementById('currentPassword').value = '';
                        document.getElementById('newPassword').value = '';
                        document.getElementById('confirmPassword').value = '';
                        Toast.fire({
                            icon: "success",
                            title: data.message,
                        });


                    } else {
                        Swal.fire({
                            text: data.message,
                            confirmButtonColor: "#111111",
                        });
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while resetting the password');
                }
            });
        </script>

        <%- include('../partials/userPartials/footer') -%>